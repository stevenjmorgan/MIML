library(missForest)
rmse <- function(error){
sqrt(mean(error^2))
}
load('mcar1_singledf.RData')
View(mcar1)
summary(mcar1)
colnames(mcar1) <- c("Y", "X1", "X2", "X3" ,"X4")
mcar1 <- as.data.frame(mcar1)
load("mcar_sets.RData")
View(mcar1.list)
library(MASS)
library(ggplot2)
seed <- 24519
# Create covariance matrix
S <- matrix(c(1.0, -0.12, -0.1, 0.5, 0.1,
-0.12, 1.0, 0.1, -0.6, 0.1,
-0.1, 0.1, 1.0, -0.5, 0.1,
0.5, -0.6, -0.5, 1.0, 0.1,
0.1, 0.1, 0.1, 0.1, 1.0), ncol = 5)
colnames(S) <- c("Y", "X1", "X2", "X3" ,"X4")
View(S)
set.seed(seed)
data <- mvrnorm(500, rep(0,5), S)
colnames(data) <- c("Y", "X1", "X2", "X3" ,"X4")
# Verify Gaussian assumptions (mu = 0, var = 1)
mean(data[,1])
mean(data[,2])
var(data[,1])
var(data[,2])
library(MASS)
library(ggplot2)
seed <- 24519
# Create covariance matrix
S <- matrix(c(1.0, -0.12, -0.1, 0.5, 0.1,
-0.12, 1.0, 0.1, -0.6, 0.1,
-0.1, 0.1, 1.0, -0.5, 0.1,
0.5, -0.6, -0.5, 1.0, 0.1,
0.1, 0.1, 0.1, 0.1, 1.0), ncol = 5)
colnames(S) <- c("Y", "X1", "X2", "X3" ,"X4")
# Create a single dataset from multivariate normal dist. w/ 5 variables
set.seed(seed)
data <- mvrnorm(500, rep(0,5), S)
colnames(data) <- c("Y", "X1", "X2", "X3" ,"X4")
# Verify Gaussian assumptions (mu = 0, var = 1)
mean(data[,1])
mean(data[,2])
var(data[,1])
var(data[,2])
m.matrix <- as.data.frame(matrix(NA, nrow = nrow(data), ncol = ncol(data)))
set.seed(seed)
for(i in 1:nrow(data)){
for(j in 1:ncol(data)){
m.matrix[i,j] <- runif(1)
}
}
View(m.matrix)
View(S)
load("mcar_sets.RData")
load("mcar_sets.RData")
View(simulated_multi)
seed <- 24519
# Create covariance matrix
S <- matrix(c(1.0, -0.12, -0.1, 0.5, 0.1,
-0.12, 1.0, 0.1, -0.6, 0.1,
-0.1, 0.1, 1.0, -0.5, 0.1,
0.5, -0.6, -0.5, 1.0, 0.1,
0.1, 0.1, 0.1, 0.1, 1.0), ncol = 5)
colnames(S) <- c("Y", "X1", "X2", "X3" ,"X4")
# Create a single dataset from multivariate normal dist. w/ 5 variables
set.seed(seed)
data <- mvrnorm(500, rep(0,5), S)
colnames(data) <- c("Y", "X1", "X2", "X3" ,"X4")
load('mcar2_singledf.RData')
rm(list=ls())
library(missForest)
rmse <- function(error){
sqrt(mean(error^2))
}
load('mcar1_singledf.RData')
load('mcar2_singledf.RData')
load('mar1_singledf.RData')
load('mar2_singledf.RData')
lst <- list(mcar1, mcar2, mar1, mar2)
lapply(lst, function(x) colnames <- c("Y", "X1", "X2", "X3" ,"X4"))
lst <- list(mcar1, mcar2, mar1, mar2)
lapply(lst, function(x) colnames(x) <- c("Y", "X1", "X2", "X3" ,"X4"))
View(lst)
lst[[1]]
str(lst)
lst1 <- lapply(lst, function(x) {colnames(x) <- c("Y", "X1", "X2", "X3" ,"X4"), as.data.frame(x)})
lst1 <- lapply(lst, function(x) {colnames(x) <- c("Y", "X1", "X2", "X3" ,"X4"); as.data.frame(x)})
View(lst1)
lst <- list(mcar1, mcar2, mar1, mar2)
lst <- lapply(lst, function(x) {colnames(x) <- c("Y", "X1", "X2", "X3" ,"X4"); as.data.frame(x)})
lst[[1]]
head(lst)
length(lst)
temp <- missForest(lst[[1]])
View(temp)
temp$ximp
View(temp$ximp)
temp <- missForest(lst[[1]], xtrue = data)
temp
# Create a matrix that notes NA values for each cell
miss.mat <- matrix(NA, nrow = nrow(mcar1), ncol = ncol(mcar1))
for (i in 1:nrow(mcar1)){
for (j in 1:ncol(mcar1)){
if (is.na(mcar1[i,j])){
miss.mat[i,j] <- 0
}
else{
miss.mat[i,j] <- 1
}
}
}
View(miss.mat)
miss.error <- numeric()
for (i in 1:nrow(miss.mat)){
for (j in 1:ncol(miss.mat)){
if (miss.mat[i,j] == 0){
miss.error <-  append(miss.error, data[i,j] - temp$ximp[i,j])
}
}
}
rmse(miss.error)
temp
var(dara)
var(data)
diag(var(data))
diag(var(data))[1,]
var(diag(var(data)))
sd(diag(var(data)))
rmse <- function(miss.df, imp.df, true.df){
miss.mat <- matrix(NA, nrow = nrow(true.df), ncol = ncol(true.df))
for (i in 1:nrow(miss.df)){
for (j in 1:ncol(miss.df)){
if (is.na(miss.df[i,j])){
miss.mat[i,j] <- 0
}
else{
miss.mat[i,j] <- 1
}
}
}
miss.error <- numeric()
for (i in 1:nrow(miss.mat)){
for (j in 1:ncol(miss.mat)){
if (miss.mat[i,j] == 0){
miss.error <-  append(miss.error, true.df[i,j] - imp.df[i,j])
}
}
}
rmse <- sqrt(mean(miss.error^2))
return(rmse)
}
rmse(mcar1, temp$ximp, data)
imp <- list()
rmse.mf <- c()
for(i in 1:length(lst)) {
imp[[i]] <- missForest(lst[[i]])
rmse.mf[i] <- rmse(lst[[i]], imp[[i]]$ximp, dat)
}
imp <- list()
rmse.mf <- c()
for(i in 1:length(lst)) {
imp[[i]] <- missForest(lst[[i]])
rmse.mf[i] <- rmse(lst[[i]], imp[[i]]$ximp, data)
}
imp <- list()
rmse.mf <- c()
for(i in 1:length(lst)) {
set.seed(11211028)
imp[[i]] <- missForest(lst[[i]])
rmse.mf[i] <- rmse(lst[[i]], imp[[i]]$ximp, data)
}
imp[[1]]$OOBerror
imp <- list()
rmse.mf <- c()
for(i in 1:length(lst)) {
set.seed(11211028)
imp[[i]] <- missForest(lst[[i]], xtrue = data)
rmse.mf[i] <- rmse(lst[[i]], imp[[i]]$ximp, data)
}
imp[[1]]$error
imp[[1]]$OOBerror
rmse.mf
names(lst)
rbind(c("mcar1", "mcar2", "mar1", "mar2"), rmse.mf)
rmse.df <- rbind(c("mcar1", "mcar2", "mar1", "mar2"), rmse.mf)
View(rmse.df)
class(rmse.df)
rmse.df <- as.data.frame(rbind(c("mcar1", "mcar2", "mar1", "mar2"), rmse.mf))
View(rmse.df)
rmse.df <- as.data.frame(rmse.mf)
View(rmse.df)
rmse.df <- t(as.data.frame(rmse.mf))
View(rmse.df)
rownames(rmse.df) <- c("mcar1", "mcar2", "mar1", "mar2")
View(rmse.df)
colnames(rmse.df) <- c("mcar1", "mcar2", "mar1", "mar2")
View(rmse.df)
imp <- list()
rmse.mf <- c() # empty vector to store RMSE
for(i in 1:length(lst)) {
set.seed(11211028)
# the function gives out-of-bag NRMSE and true NRMSE
imp[[i]] <- missForest(lst[[i]], xtrue = data)
rmse.mf[i] <- rmse(lst[[i]], imp[[i]]$ximp, data)
}
for(i in 1:length(lst)) {
set.seed(11212018)
# the function gives out-of-bag NRMSE and true NRMSE
imp[[i]] <- missForest(lst[[i]], xtrue = data)
rmse.mf[i] <- rmse(lst[[i]], imp[[i]]$ximp, data)
}
rmse.df <- t(as.data.frame(rmse.mf))
colnames(rmse.df) <- c("mcar1", "mcar2", "mar1", "mar2")
rmse.mf
miss.error <- numeric()
for (i in 1:nrow(mcar1)){
for (j in 1:ncol(mcar1)){
if (miss.mat[i,j] == 0){
miss.error <-  append(miss.error, data[i,j] - imp[[1]]$ximp[i,j])
}
}
}
rmse <- sqrt(mean(miss.error^2))
miss.error <- numeric()
for (i in 1:nrow(mcar2)){
for (j in 1:ncol(mcar2)){
if (miss.mat[i,j] == 0){
miss.error <-  append(miss.error, data[i,j] - imp[[2]]$ximp[i,j])
}
}
}
rmse <- sqrt(mean(miss.error^2))
miss.error <- numeric()
for (i in 1:nrow(mcar2)){
for (j in 1:ncol(mcar2)){
if (miss.mat[i,j] == 0){
miss.error <-  append(miss.error, data[i,j] - imp[[2]]$ximp[i,j])
}
}
}
rmse <- sqrt(mean(miss.error^2))
miss.error <- numeric()
for (i in 1:nrow(mar2)){
for (j in 1:ncol(mar2)){
if (miss.mat[i,j] == 0){
miss.error <-  append(miss.error, data[i,j] - imp[[4]]$ximp[i,j])
}
}
}
rmse <- sqrt(mean(miss.error^2))
rmse
imp[[4]]$error
